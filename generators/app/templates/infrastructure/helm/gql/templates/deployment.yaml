{{- $current := .Values.gql -}}
{{- $global := .Values.global -}}
{{- if $current.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "Gql.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "Gql.fullname" . }}
    helm.sh/chart: {{ include "Gql.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    sidecar.jaegertracing.io/inject: "false"
spec:
  replicas: {{ $current.replicaCount }}
  selector:
    matchLabels:
      {{- include "Gql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    <%_ if(addMessaging) { _%>
      annotations:
        rusi.io/app-id: {{ $current.messaging.source | quote }}
        rusi.io/enabled: {{ lower $global.messaging.transport | eq "rusi" | quote }}
    <%_}_%>
      labels:
        {{- include "Gql.selectorLabels" . | nindent 8 }}
    spec:
    {{- with $current.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ $current.name }}
          image: "{{ $current.image.repository }}{{ $current.image.name}}:{{ $current.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $current.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $current.service.targetPort }}
              protocol: TCP
          {{- if $global.diagnostics.enabled }}
            - name: diag
              containerPort: {{ $global.diagnostics.port }}
              protocol: TCP
          {{- end }}
          {{- if $global.metrics.enabled }}
            - name: metrics
              containerPort: {{ $global.metrics.port }}
              protocol: TCP
          {{- end }}
          resources:
            {{- toYaml $current.resources | trim | nindent 12 }}
          env:
<%_ if(dataLayer == "knex"){ _%>
          - name: DB_HOST
            value: {{ $global.db.host | quote }}
          - name: DB_PORT
            value: {{ $global.db.port | quote }}
          - name: DB_DATABASE
            value: {{ $global.db.database | quote }}
          - name: DB_INSTANCE_NAME
            value: {{ $global.db.instanceName | quote }}
          - name: DB_TRUST_SERVER_CERTIFICATE
            value: {{ $global.db.trustServerCertificate | quote }}
<%_}_%>
<%_ if(addMessaging) { _%>
          - name: Messaging__Env
            value: {{ $global.messaging.env | quote }}
          - name: Messaging__Source
            value: {{ $current.messaging.source | quote }}
          - name: Messaging__Transport
            value: {{ $global.messaging.transport | quote }}
          - name: NATS_URL
            value: {{ $global.messaging.natsUrl | quote }}
          - name: NATS_CLUSTER
            value: {{ $global.messaging.natsCluster | quote }}
          - name: NATS_DURABLE_NAME
            value: {{ $global.messaging.natsDurableName | quote }}
          - name: NATS_CLIENT_ID
            value: {{ $current.messaging.clientId | quote }}
          - name: NATS_Q_GROUP
            value: {{ $current.messaging.natsQGroup | quote }}
<%_}_%>
          - name: DIAGNOSTICS_ENABLED
            value: {{ $global.diagnostics.enabled | quote }}
          - name: DIAGNOSTICS_PORT
            value: {{ $global.diagnostics.port | quote }}
          - name: METRICS_ENABLED
            value: {{ $global.metrics.enabled | quote }}
          - name: METRICS_PORT
            value: {{ $global.metrics.port | quote }}
<%_ if(addTracing){ _%>
          - name: OTEL_TRACING_ENABLED
            value: {{ $global.otlp.enabled | quote }}
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: {{ $global.otlp.endpoint | quote }}
<%_}_%>
<%_ if(withMultiTenancy){ _%>
          - name: IS_MULTITENANT
            value: {{ $global.multiTenancy.tenancyType | eq "MultiTenant" | quote }}
<%_}_%>
          {{- range $key, $value := $current.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- if $global.runtimeConfiguration.enabled }}
          volumeMounts:
            - name: runtime-configs
              readOnly: true
              mountPath: /usr/src/app/runtime/configs
            - name: runtime-secrets
              readOnly: true
              mountPath: /usr/src/app/runtime/secrets
          {{- end }}
      {{- if $global.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml $global.imagePullSecrets | trim | nindent 8 }}
      {{- end }}
      {{- if $global.runtimeConfiguration.enabled }}
      volumes:
        - name: runtime-configs
          configMap:
            name: {{ $global.runtimeConfiguration.configMap }}
            defaultMode: 420
        - name: runtime-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $global.runtimeConfiguration.csi.secretProviderClass }}
      {{- end }}
      {{- with $current.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
