{{- $current := .Values.gql -}}
{{- $global := .Values.global -}}
{{- if $current.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "Gql.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "Gql.fullname" . }}
    helm.sh/chart: {{ include "Gql.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
<%_ if(addTracing){ _%>
  {{- if and (eq $global.jaeger.enabled true) (eq $global.jaeger.agentAutoInject true) }}
  annotations:
    "sidecar.jaegertracing.io/inject": "true"
  {{- else }}
  annotations:
    "sidecar.jaegertracing.io/inject": "false"
  {{- end }}
<%_} else {_%>
  annotations:
    "sidecar.jaegertracing.io/inject": "false"
<%_}_%>
spec:
  replicas: {{ $current.replicaCount }}
  selector:
    matchLabels:
      {{- include "Gql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
    <%_ if(addVaultConfigs){ _%>
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: {{ $global.vaultConfigs.role }}
        vault.hashicorp.com/agent-inject-secret-credentials.vault: {{$global.vaultConfigs.secret }}/{{ $global.vaultConfigs.key }}
        vault.hashicorp.com/agent-inject-template-credentials.vault: |
          {{ printf "{{- with secret \"%s/%s\" -}}"  .Values.global.vaultConfigs.secret .Values.global.vaultConfigs.key }}
          export DB_USER={{`{{ .Data.data.db_user }}`}}
          export DB_PASSWORD={{`{{ .Data.data.db_password }}`}}
          {{ print "{{- end }}" }}
    <%_}_%>
    <%_ if(addMessaging && messagingTransport == 'rusi') { _%>
        rusi.io/app-id: {{ $current.messaging.source | quote }}
        rusi.io/config: {{ $global.messaging.rusiConfigName | quote }}
        rusi.io/enabled: "true"
    <%_}_%>
      labels:
        {{- include "Gql.selectorLabels" . | nindent 8 }}
    spec:
    <%_ if(addVaultConfigs){ _%>
      {{- if eq $global.vaultEnvironment "true" }}
      serviceAccountName: {{ $global.vaultConfigs.sa }}
      {{- end }}
    <%_}_%>
    {{- with $current.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ $current.name }}
          image: "{{ $current.image.repository }}{{ $current.image.name}}:{{ $current.image.tag }}"
          imagePullPolicy: {{ $current.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $current.service.targetPort }}
              protocol: TCP
          resources:
            {{- toYaml $current.resources | trim | nindent 12 }}
          env:
          - name: DB_HOST
            value: {{ $global.db.host | quote }}
          - name: DB_PORT
            value: {{ $global.db.port | quote }}
          - name: DB_DATABASE
            value: {{ $global.db.database | quote }}
<%_ if(addVaultConfigs){ _%>
          {{- if eq $global.vaultEnvironment "false" }}
<%_}_%>
          - name: DB_USER
            value: {{ $global.db.user | quote }}
          - name: DB_PASSWORD
            value: {{ $global.db.password | quote }}
<%_ if(addVaultConfigs){ _%>
          {{- end }}
<%_}_%>
          - name: DB_INSTANCE_NAME
            value: {{ $global.db.instanceName | quote }}
          - name: DB_TRUST_SERVER_CERTIFICATE
            value: {{ $global.db.trustServerCertificate | quote }}
<%_ if(addMessaging) { _%>
          - name: Messaging__TopicPrefix
            value: {{ $global.messaging.topicPrefix | quote }}
          - name: Messaging__Env
            value: {{ $global.messaging.env | quote }}
          - name: Messaging__Source
            value: {{ $current.messaging.source | quote }}
          - name: Messaging__Transport
            value: <%= messagingTransport %>
<%_ if(messagingTransport == 'nats') { _%>
          - name: NATS_URL
            value: {{ $global.messaging.natsUrl | quote }}
          - name: NATS_CLUSTER
            value: {{ $global.messaging.natsCluster | quote }}
          - name: NATS_DURABLE_NAME
            value: {{ $global.messaging.natsDurableName | quote }}
          - name: NATS_CLIENT_ID
            value: {{ $current.messaging.clientId | quote }}
          - name: NATS_Q_GROUP
            value: {{ $current.messaging.natsQGroup | quote }}
<%_}_%>
<%_ if(messagingTransport == 'rusi') { _%>
          - name: RUSI_PUB_SUB_NAME
            value: {{ $global.messaging.rusiPubSubName | quote }}
<%_}_%>
<%_}_%>
<%_ if(addTracing){ _%>
          - name: JAEGER_SERVICE_NAME
            value: {{ $global.jaeger.serviceName | quote }}
          - name: JAEGER_AGENT_HOST
            value: {{ $global.jaeger.agentHost | quote }}
          - name: JAEGER_AGENT_PORT
            value: {{ $global.jaeger.agentPort | quote }}
          - name: JAEGER_SAMPLER_TYPE
            value: {{ $global.jaeger.samplerType | quote }}
          - name: JAEGER_SAMPLER_PARAM
            value: {{ $global.jaeger.samplerParam | quote }}
          - name: JAEGER_DISABLED
          {{- if $global.jaeger.enabled }}
            value: "false"
          {{- else }}
            value: "true"
          {{- end }}
<%_}_%>
          {{- range $key, $value := $current.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- if $global.runtimeConfiguration.enabled }}
          volumeMounts:
            - name: runtime-configs
              readOnly: true
              mountPath: /usr/src/app/runtime/configs
            - name: runtime-secrets
              readOnly: true
              mountPath: /usr/src/app/runtime/secrets
          {{- end }}
<%_ if(addTracing){ _%>
          {{- if and (eq $global.jaeger.enabled true) (eq $global.jaeger.agentAutoInject false) }}
        - image: jaegertracing/jaeger-agent:{{ $global.jaeger.agentImageTag }}
          name: jaeger-agent{{ $current.nameSuffix}}
          ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
          - containerPort: 5778
            protocol: TCP
          args: ["--collector.host-port={{ $global.jaeger.collectorHost }}:{{ $global.jaeger.collectorPort }}"]
        {{- end -}}
<%_}_%>
      {{- if $global.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml $global.imagePullSecrets | trim | nindent 8 }}
      {{- end }}
      {{- if $global.runtimeConfiguration.enabled }}
      volumes:
        - name: runtime-configs
          configMap:
            name: {{ $global.runtimeConfiguration.configMap }}
            defaultMode: 420
        - name: runtime-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $global.runtimeConfiguration.csi.secretProviderClass }}
      {{- end }}
      {{- with $current.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
